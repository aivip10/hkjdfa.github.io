WEBVTT
Kind: captions
Language: en

00:00:00.012 --> 00:00:05.136
But still, we don't know how many values are less than any of the numbers in

00:00:05.136 --> 00:00:10.520
between the balance of each bin. For example, we wouldn't be able to tell their

00:00:10.520 --> 00:00:15.981
proportion less than 175. Ideally, we would want a smaller bin size as possible.

00:00:15.981 --> 00:00:20.987
In fact, infinitely small. But look out what happens with this data when we

00:00:20.987 --> 00:00:26.407
decrease the bin size. In other words, we increase the number of bins. Here, we

00:00:26.407 --> 00:00:32.235
have 50 intervals. Here, a 100 intervals. And notice that the frequency on the

00:00:32.235 --> 00:00:38.564
y-axis is getting smaller. Here's 200 intervals. 500 intervals. 1,000 intervals.

00:00:38.564 --> 00:00:44.796
And now, you see that the frequency is 1 for a lot of bins. 5,000 intervals.

00:00:44.796 --> 00:00:51.264
30,000 intervals. And now at 150,000 intervals, the frequency for each bin is

00:00:51.264 --> 00:00:57.364
either 0 or 1. That's because the size of each bin is so small so there is only

00:00:57.364 --> 00:01:02.781
1 value in many of the bins or just 0 values. So eventually, if we keep

00:01:02.781 --> 00:01:08.972
decreasing the bin size we loose the shape of our distribution. Try it yourself.

00:01:08.972 --> 00:01:14.044
I shared a histogram link that illustrates this concept really well. Use the

00:01:14.044 --> 00:01:19.258
data set of physics test scores and change the bin size to the smallest possible

00:01:19.258 --> 00:01:22.126
bin and see what happens to the frequency.

