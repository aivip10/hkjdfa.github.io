WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.419
我们先来看前馈的部分

00:00:03.419 --> 00:00:05.665
为了简化计算

00:00:05.665 --> 00:00:08.390
我们取 n 个输入

00:00:08.390 --> 00:00:13.214
一个包含三个神经元的隐藏层 以及两个输出

00:00:13.214 --> 00:00:15.009
顺便提一句 在现实中

00:00:15.009 --> 00:00:18.365
一个隐藏层可以有数千个神经元

00:00:18.364 --> 00:00:22.184
我们用 W1 来表示 x 与 h 之间的权重集合

00:00:22.184 --> 00:00:27.184
用 W2 来表示 h 与 y 之间的权重集合

00:00:27.184 --> 00:00:29.934
由于我们只有一个隐藏层

00:00:29.934 --> 00:00:34.174
所以每个前馈循环只有两步

00:00:34.174 --> 00:00:41.304
第一步 借助权重集合 W1 来求与给定输入对应的 h

00:00:41.304 --> 00:00:45.549
第二步 借助权重集合 W2

00:00:45.549 --> 00:00:50.289
求得与上一步得到的 h 对应的输出 y

00:00:50.289 --> 00:00:55.444
你会发现 除了用非线性激活函数外

00:00:55.444 --> 00:01:01.115
所有计算都涉及输入与权重的线性组合

00:01:01.115 --> 00:01:05.254
换句话说 都会用到矩阵乘法

00:01:05.254 --> 00:01:08.004
我们先讲第一步

00:01:08.004 --> 00:01:10.780
求 h

00:01:10.780 --> 00:01:15.245
注意 如果隐藏层神经元不止一个 其实神经元数目通常都不止一个

00:01:15.245 --> 00:01:17.340
那 h 就是一个向量

00:01:17.340 --> 00:01:20.380
我们会取初始输入 x

00:01:20.379 --> 00:01:22.549
x 也是一个向量

00:01:22.549 --> 00:01:25.814
来求隐藏神经元的值 h

00:01:25.814 --> 00:01:30.935
每个输入会与隐藏层的各神经元相连

00:01:30.935 --> 00:01:33.159
为了叙述方便

00:01:33.159 --> 00:01:38.890
我们会用以下指称 W11 连接 x1 和 h1

00:01:38.890 --> 00:01:42.790
W13 连接 x1 和 h3

00:01:42.790 --> 00:01:47.930
W21 连接 x2 和 h1

00:01:47.930 --> 00:01:53.770
Wn3 连接 xn 和 h3 以此类推

00:01:54.409 --> 00:01:59.094
把输入向量 x1、x2

00:01:59.094 --> 00:02:02.400
一直到 xn

00:02:02.400 --> 00:02:07.545
与权重矩阵 W1 相乘 从而得出隐藏神经元

00:02:07.545 --> 00:02:16.020
所以 每个向量 h 都等于向量 x 乘以权重矩阵 W1 的值

00:02:16.020 --> 00:02:20.260
此时 我们的权重矩阵有 n 行

00:02:20.259 --> 00:02:22.514
因为我们有 n 个输入

00:02:22.514 --> 00:02:27.324
3 列 因为隐藏层有三个神经元

00:02:27.324 --> 00:02:31.159
如果让输入向量乘以权重矩阵

00:02:31.159 --> 00:02:35.060
隐藏层的各神经元就会得到一个简单的线性组合

00:02:35.060 --> 00:02:40.560
由此可求得向量 h

00:02:40.560 --> 00:02:44.520
举个例子 h1 就会等于 x1 * W11

00:02:44.520 --> 00:02:49.735
+ x2 * W21… 以此类推

00:02:49.735 --> 00:02:53.495
但至此隐藏层的计算尚未结束

00:02:53.495 --> 00:02:56.455
注意到这里的 “ ’ ” 符号了吗？

00:02:56.455 --> 00:03:00.640
指的就是我们还没求得 h

00:03:00.639 --> 00:03:03.534
就快了 但还差一点

00:03:03.534 --> 00:03:09.109
为了防止 h 的值爆炸或涨幅过多

00:03:09.110 --> 00:03:12.120
我们需要使用激活函数

