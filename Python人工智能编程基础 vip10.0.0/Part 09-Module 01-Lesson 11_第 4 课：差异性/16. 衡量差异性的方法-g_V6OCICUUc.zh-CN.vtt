WEBVTT
Kind: captions
Language: zh-CN

00:00:00.012 --> 00:00:04.274
让我们仔细查看每个选项 比如你有三个数据值

00:00:04.274 --> 00:00:08.798
我们可以找出这个与这个间的距离 然后再找出这个与这个间的距离

00:00:08.798 --> 00:00:13.347
然后再找出这个与这个间的距离

00:00:13.347 --> 00:00:17.638
这个与这个间的距离

00:00:17.638 --> 00:00:23.030
最后是这个与这个间的距离 这个与这个间的距离

00:00:23.030 --> 00:00:28.630
我们计算了6个间距 想像一下

00:00:28.630 --> 00:00:34.429
如果我们加上另外一个数据集 结果是多少 我们将计算另外6个间距 这个与这个间的距离

00:00:34.429 --> 00:00:40.084
这个与这个间的距离 和另两个间的距离 以及这个点与其它所有点间的距离

00:00:40.084 --> 00:00:45.226
想像一下 如果我们有1000个数据值 哪一个对数据集来说是特别典型的数据值

00:00:45.226 --> 00:00:49.934
这个方法不可行 因为要计算的东西太多

00:00:49.934 --> 00:00:54.525
如果我们计算每个数据值间的平均距离而且

00:00:54.525 --> 00:00:59.102
它们既不会是最大值也不会是最小值 会怎么样呢？如果我们将四个数据值相加

00:00:59.102 --> 00:01:04.208
且挑选其中的最小值 则只须找到三个距离 应该是四个数据值

00:01:04.208 --> 00:01:09.288
其实也包含最小值本身 但如果有异常数值会怎么样呢？

00:01:09.288 --> 00:01:14.148
如果得出的值相去甚远会怎么样呢？

00:01:14.148 --> 00:01:19.383
每个异常数值的距离其实很远 即使这些值之间距离很近

00:01:19.383 --> 00:01:24.007
一个异常数值可引起巨大的差异性

00:01:24.007 --> 00:01:28.696
因此这不会对任何一个值起作用 然而平均值其实是很好的参照点

00:01:28.696 --> 00:01:33.163
因为它处于数据的中间 平均值考虑了每个数据值

00:01:33.163 --> 00:01:34.432
因此这是我们最好的办法

