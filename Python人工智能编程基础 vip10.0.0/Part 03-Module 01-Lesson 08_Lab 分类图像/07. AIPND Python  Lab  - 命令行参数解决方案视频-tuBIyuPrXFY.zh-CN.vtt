WEBVTT
Kind: captions
Language: zh-CN

00:00:00.090 --> 00:00:04.759
本视频将讲解命令行参数部分的解决方案

00:00:04.759 --> 00:00:08.855
首先定义函数 get_input_args

00:00:08.855 --> 00:00:10.525
这里的文档字符串指出

00:00:10.525 --> 00:00:13.300
该函数没有输入参数

00:00:13.300 --> 00:00:15.970
但会返回解析器参数 parse_args

00:00:15.970 --> 00:00:19.179
也即存储着命令行参数的数据结构

00:00:19.179 --> 00:00:20.230
首先

00:00:20.230 --> 00:00:22.405
创建解析器对象

00:00:22.405 --> 00:00:24.900
将其命名为 parser

00:00:24.899 --> 00:00:29.324
接着 进行三个命令行参数的创建

00:00:29.324 --> 00:00:36.464
第一个命令行参数是 “dir” 默认为 pet_images 文件夹

00:00:36.465 --> 00:00:39.510
其实就是图像路径

00:00:39.509 --> 00:00:44.304
第二个命令行参数是 “arch”

00:00:44.304 --> 00:00:49.950
默认为 “vgg” 但你可以改成其它模型

00:00:49.950 --> 00:00:52.980
这个参数就是用来选择模型的

00:00:52.979 --> 00:00:56.344
最后是 “dogfile”

00:00:56.344 --> 00:00:59.765
默认为 “dognames.txt”

00:00:59.765 --> 00:01:03.259
即包含着犬名的文本文件

00:01:03.259 --> 00:01:08.120
最后 返回 parser_args

00:01:08.120 --> 00:01:15.189
接着 来到调用了函数 get_input_args 的主函数部分

00:01:15.189 --> 00:01:21.111
我们可以看到主函数调用了 get_input_args

00:01:21.111 --> 00:01:23.475
其中没有任何参数 这是对的

00:01:23.474 --> 00:01:30.354
函数会将命令行参数返回为变量 in_arg

00:01:30.355 --> 00:01:33.000
接着 编写输出语句

00:01:33.000 --> 00:01:36.459
这些语句是临时的 等代码检查完毕后 我们就要删除掉这些语句

00:01:36.459 --> 00:01:40.289
语句的唯一作用就是输出这三个命令行参数

00:01:40.290 --> 00:01:44.048
注意这些参数的调用方式为

00:01:44.048 --> 00:01:45.859
变量名.命令行参数名

00:01:45.858 --> 00:01:48.074
比如 in_arg.dir

00:01:48.075 --> 00:01:57.284
会调用目录路径 pet_images

00:01:57.284 --> 00:02:01.310
接着 运行程序 检查代码

00:02:01.310 --> 00:02:04.335
在终端窗口里

00:02:04.334 --> 00:02:08.560
输入 python check_images 后面再输入 -h

00:02:08.560 --> 00:02:12.400
从而获取程序的帮助文件

00:02:12.400 --> 00:02:15.444
从这里可以看出命令行参数有哪些

00:02:15.444 --> 00:02:18.310
了解每个参数的作用

00:02:18.310 --> 00:02:20.890
在第二个终端窗口中

00:02:20.889 --> 00:02:25.250
输入 python check_images.py 按下 enter 键

00:02:25.250 --> 00:02:30.409
程序会输出命令行参数的默认值

00:02:30.409 --> 00:02:32.645
即默认目录 pet_images

00:02:32.645 --> 00:02:36.000
默认模型结构 vgg

00:02:36.000 --> 00:02:41.384
默认犬名文本 dogsnames.txt

00:02:41.384 --> 00:02:43.685
在第三个终端窗口中

00:02:43.685 --> 00:02:49.390
我输入了三个命令行参数 dir 对应 pets

00:02:49.389 --> 00:02:51.169
可以看到这里有相应的输出

00:02:51.169 --> 00:02:56.769
结构 arch 对应 resnet 这里也有相应的输出

00:02:56.770 --> 00:02:58.375
dogfile

00:02:58.375 --> 00:03:02.705
对应 dnames.txt 这里也有相应的输出

00:03:02.705 --> 00:03:06.000
由此可见 代码无误

