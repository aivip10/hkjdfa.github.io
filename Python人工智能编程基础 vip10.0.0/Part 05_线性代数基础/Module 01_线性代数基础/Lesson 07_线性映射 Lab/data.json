{
  "data": {
    "lesson": {
      "id": 592391,
      "key": "872aea9e-6e18-4104-8358-4e4d96d4ae45",
      "title": "线性映射 Lab",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "zh-cn",
      "summary": "学习如何使用向量和矩阵以计算方式解决一些问题。",
      "lesson_type": "Classroom",
      "display_workspace_project_only": null,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/872aea9e-6e18-4104-8358-4e4d96d4ae45/592391/1544294438198/%E7%BA%BF%E6%80%A7%E6%98%A0%E5%B0%84+Lab+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/872aea9e-6e18-4104-8358-4e4d96d4ae45/592391/1544294435503/%E7%BA%BF%E6%80%A7%E6%98%A0%E5%B0%84+Lab+Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 592381,
          "key": "68a7ab26-fb94-4d57-bb31-7f47b6a6570f",
          "title": "Lab 说明",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "68a7ab26-fb94-4d57-bb31-7f47b6a6570f",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 592328,
              "key": "a6c9c28e-0673-4acf-b36f-57b207ecf17d",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "***\n#  Lab 说明\n对于第一道 Lab 练习*可视化矩阵乘法*，你将使用一个简单的 Python 示例可视化矩阵乘法的流程。第一道练习介绍了矩阵乘法流程。\n\n对于第二道练习*矩阵乘法 Lab*，你将在 Python 中使用矩阵乘法解决一个更复杂的问题。第二道练习演示了如何使用矩阵乘法解决更复杂的问题，例如将在 AI 中遇到的神经网络问题。",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 592378,
          "key": "d3f66379-e893-41b2-8b64-c9b6c1dda9db",
          "title": "可视化矩阵乘法",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "d3f66379-e893-41b2-8b64-c9b6c1dda9db",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 592318,
              "key": "176df203-b740-41f7-a12e-cafb043bc563",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view91b41378",
              "pool_id": "jupyter",
              "view_id": "78e4b631-4fc7-44b7-a8ec-226caaadc31d",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "ports": [],
                    "allowSubmit": false,
                    "defaultPath": "/notebooks/PlottingMatrixMultiplication-zh.ipynb"
                  },
                  "kind": "jupyter"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        },
        {
          "id": 592379,
          "key": "84850c41-5a08-4ce7-9a6e-4299c2b0f045",
          "title": "矩阵乘法 Lab",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "84850c41-5a08-4ce7-9a6e-4299c2b0f045",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 616638,
              "key": "126f44e1-eec8-4c84-8430-ec49efb9b935",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view675b0caa",
              "pool_id": "jupyter",
              "view_id": "675b0caa-342d-49e9-8441-aabb59959435",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "ports": [],
                    "allowGrade": false,
                    "allowSubmit": false,
                    "defaultPath": "/notebooks/matrixMultCurrency-zh.ipynb"
                  },
                  "kind": "jupyter"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        },
        {
          "id": 592380,
          "key": "f33a67b8-41ae-4c0e-b584-0d447933d0b4",
          "title": "线性映射 Lab 解决方案",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "f33a67b8-41ae-4c0e-b584-0d447933d0b4",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 592320,
              "key": "9dad392f-9904-492b-95a6-7ec85be622ab",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# 线性映射 Lab 解决方案\n***\n下方是*可视化矩阵乘法*和*矩阵乘法* Lab 中三个练习对应的解决方案视频。 \n\n此外，我们为这些 Lab 维护了一个 Github 代码库，其中包含以下内容：\n- 可视化矩阵乘法 Lab\n - [可视化矩阵乘法 Jupyter Notebook](https://github.com/udacity/AIPND/blob/master/linearalgebra-linear_mapping/PlottingMatrixMultiplication.ipynb)\n - [可视化矩阵乘法解决方案 Jupyter Notebook](https://github.com/udacity/AIPND/blob/master/linearalgebra-linear_mapping/PlottingMatrixMultiplicationSolution.ipynb)\n- 矩阵乘法 Lab\n - [通过矩阵乘法进行货币换算 Jupyter Notebook](https://github.com/udacity/AIPND/blob/master/linearalgebra-linear_mapping/matrixMultCurrency.ipynb)\n - [通过矩阵乘法进行货币换算解决方案 Jupyter Notebook](https://github.com/udacity/AIPND/blob/master/linearalgebra-linear_mapping/matrixMultCurrencySolution.ipynb)\n\n***\n## 计算和绘制转换向量的解决方案视频",
              "instructor_notes": ""
            },
            {
              "id": 592321,
              "key": "1b55a73f-6e94-4763-8198-9b183c0e2986",
              "title": "AIPND 线性代数：绘制转换向量 v3",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "lmF-V8emukA",
                "china_cdn_id": "lmF-V8emukA.mp4"
              }
            },
            {
              "id": 592322,
              "key": "2453f816-01d8-4275-863f-fb14a8086d32",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "***\n## 矩阵乘法的解决方案视频",
              "instructor_notes": ""
            },
            {
              "id": 592323,
              "key": "c0542921-a3e2-4de1-ae90-6e92fb9c9999",
              "title": "AIPND 线性代数：矩阵乘法 v2",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "TavNlmrIuwI",
                "china_cdn_id": "TavNlmrIuwI.mp4"
              }
            },
            {
              "id": 592324,
              "key": "4880d91f-398c-4c06-a902-7e13f5a63203",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "***\n## 通过矩阵乘法进行货币换算的解决方案视频",
              "instructor_notes": ""
            },
            {
              "id": 592325,
              "key": "b72283a3-f97e-4f67-b99a-404c5fb82295",
              "title": "AIPND 线性代数：货币换算问题 v2",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "wmHk5cL5NJA",
                "china_cdn_id": "wmHk5cL5NJA.mp4"
              }
            }
          ]
        }
      ]
    }
  }
}